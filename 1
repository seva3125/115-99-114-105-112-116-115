print("Loaded Barrys Prison Run Script...")
local function toolGet(t)
    local ReplicatedStorage = game:GetService("ReplicatedStorage");
    local sendToolRemote = ReplicatedStorage:WaitForChild("ShopAssetsFolder"):WaitForChild("AssetRemotes"):WaitForChild("SendTool");
    if not game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(t) then
        sendToolRemote:FireServer(t, true, false);
    end
end
local blackholeBool = Instance.new("BoolValue");
blackholeBool.Changed:Connect(function(val)
    if val == true then
        game:GetService("Players").LocalPlayer.Backpack:WaitForChild("BlackHole").send:FireServer();
    elseif val == false then
        game:GetService("Players").LocalPlayer.Backpack:WaitForChild("BlackHole").rem:FireServer();
    end
end)
local function toggleBlackhole(v)
    if not game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("BlackHole") then
        toolGet("BlackHole");
    end
    blackholeBool.Value = v;
end
local function kill(p: Player)
    if p ~= game:GetService("Players").LocalPlayer then
        local char = p.Character;
        game:GetService("ReplicatedStorage").ShopAssetsFolder.AssetRemotes.BatonRemotes.HitRemote:FireServer("FlameSword", Vector3.new(15.127079963684082, 102.9078598022461, -37.12237548828125), {["TargetSound"] = {[1] = "rbxassetid://3518146972"},["HasIdleVFX"] = false,["DefaultDamage"] = 0x7fffffff,["LoopSound"] = true,["ImpactSound"] = {[1] = "rbxassetid://3518146972"},["Name"] = "FlameSword",["SwingSound"] = "rbxassetid://135315310485417",["AnimationName"] = "WeaponAnimation",["Force"] = 0x7fffffff,["BlockDamage"] = 0x7fffffff,["Damage"] = 0x7fffffff}, char, false, false, false);
    end
end
local function heal(p: Player)
    local char = p.Character;
    game:GetService("ReplicatedStorage").ShopAssetsFolder.AssetRemotes.BatonRemotes.HitRemote:FireServer("FlameSword", Vector3.new(15.127079963684082, 102.9078598022461, -37.12237548828125), {["TargetSound"] = {[1] = "rbxassetid://3518146972"},["HasIdleVFX"] = false,["DefaultDamage"] = 0,["LoopSound"] = true,["ImpactSound"] = {[1] = "rbxassetid://3518146972"},["Name"] = "FlameSword",["SwingSound"] = "rbxassetid://135315310485417",["AnimationName"] = "WeaponAnimation",["Force"] = 0,["BlockDamage"] = 0,["Damage"] = -33330}, char, false, false, false);
end
local killUI = Instance.new("ScreenGui",gethui() or game:GetService("CoreGui"));killUI.ResetOnSpawn = false;killUI.Enabled = false;local buttonOfKilling = Instance.new("TextButton",killUI);buttonOfKilling.Size = UDim2.fromOffset(130,50);buttonOfKilling.Position = UDim2.new(0, 10, 1, -10);buttonOfKilling.AnchorPoint = Vector2.new(0, 1);buttonOfKilling.TextColor3 = Color3.fromRGB(80,0,0);buttonOfKilling.Text = "Kill All";buttonOfKilling.Font = Enum.Font.Gotham;buttonOfKilling.TextSize = 22;buttonOfKilling.BackgroundColor3=Color3.fromRGB(0,0,0);buttonOfKilling.MouseButton1Click:Connect(function() for _,p in ipairs(game:GetService("Players"):GetPlayers()) do kill(p); end; end);local cornersOfKillUI = Instance.new("UICorner",buttonOfKilling);cornersOfKillUI.CornerRadius = UDim.new(0,12);
local function killTool()
    local Players = game:GetService("Players");
    local LocalPlayer = Players.LocalPlayer;
    LocalPlayer.CharacterAdded:Connect(function()
    if not LocalPlayer.Backpack:FindFirstChild("Kill Tool") then
        local Mouse = LocalPlayer:GetMouse();
        local tool = Instance.new("Tool");
        tool.Name = "Kill Tool";
        tool.RequiresHandle = false;
        tool.CanBeDropped = false;
        tool.Parent = LocalPlayer.Backpack;
        tool.Activated:Connect(function()
            local target = Mouse.Target;
            if not target then return end
            local character = target:FindFirstAncestorOfClass("Model");
            local player = Players:GetPlayerFromCharacter(character);
            if player and player ~= LocalPlayer then
                kill(player);
            end
        end);
        tool.Equipped:Connect(function()
            killUI.Enabled = true;
        end)
        tool.Unequipped:Connect(function()
            killUI.Enabled = false;
        end)
    end end)
    if not LocalPlayer.Backpack:FindFirstChild("Kill Tool") then
        local Mouse = LocalPlayer:GetMouse();
        local tool = Instance.new("Tool");
        tool.Name = "Kill Tool";
        tool.RequiresHandle = false;
        tool.CanBeDropped = false;
        tool.Parent = LocalPlayer.Backpack;
        tool.Activated:Connect(function()
            local target = Mouse.Target;
            if not target then return end
            local character = target:FindFirstAncestorOfClass("Model");
            local player = Players:GetPlayerFromCharacter(character);
            if player and player ~= LocalPlayer then
                kill(player);
            end
        end);
        tool.Equipped:Connect(function()
            killUI.Enabled = true;
        end)
        tool.Unequipped:Connect(function()
            killUI.Enabled = false;
        end)
    end
end
local healUI = Instance.new("ScreenGui",gethui() or game:GetService("CoreGui"));healUI.ResetOnSpawn = false;healUI.Enabled = false;local buttonOfHealing = Instance.new("TextButton",healUI);buttonOfHealing.Size = UDim2.fromOffset(130,50);buttonOfHealing.Position = UDim2.new(0, 10, 1, -10);buttonOfHealing.AnchorPoint = Vector2.new(0, 1);buttonOfHealing.Text = "Heal Thyself";buttonOfHealing.Font = Enum.Font.GothamBlack;buttonOfHealing.TextSize = 22;buttonOfHealing.BackgroundColor3=Color3.fromRGB(81, 255, 69);buttonOfHealing.MouseButton1Click:Connect(function() heal(game:GetService("Players").LocalPlayer); end);local cornersOfHealUI = Instance.new("UICorner",buttonOfHealing);cornersOfHealUI.CornerRadius = UDim.new(0,12);

local function healTool()
    local Players = game:GetService("Players");
    local LocalPlayer = Players.LocalPlayer;
    LocalPlayer.CharacterAdded:Connect(function()
    if not LocalPlayer.Backpack:FindFirstChild("Heal Tool") then
        local Mouse = LocalPlayer:GetMouse();
        local tool = Instance.new("Tool");
        tool.Name = "Heal Tool";
        tool.RequiresHandle = false;
        tool.CanBeDropped = false;
        tool.Parent = LocalPlayer.Backpack;
        tool.Activated:Connect(function()
            local target = Mouse.Target;
            if not target then return end
            local character = target:FindFirstAncestorOfClass("Model");
            local player = Players:GetPlayerFromCharacter(character);
            if player and player ~= LocalPlayer then
                heal(player);
            end
        end);
        tool.Equipped:Connect(function()
            healUI.Enabled = true;
        end)
        tool.Unequipped:Connect(function()
            healUI.Enabled = false;
        end)
    end end)
    if not LocalPlayer.Backpack:FindFirstChild("Heal Tool") then
        local Mouse = LocalPlayer:GetMouse();
        local tool = Instance.new("Tool");
        tool.Name = "Heal Tool";
        tool.RequiresHandle = false;
        tool.CanBeDropped = false;
        tool.Parent = LocalPlayer.Backpack;
        tool.Activated:Connect(function()
            local target = Mouse.Target;
            if not target then return end
            local character = target:FindFirstAncestorOfClass("Model");
            local player = Players:GetPlayerFromCharacter(character);
            if player and player ~= LocalPlayer then
                heal(player);
            end
        end);
        tool.Equipped:Connect(function()
            healUI.Enabled = true;
        end)
        tool.Unequipped:Connect(function()
            healUI.Enabled = false;
        end)
    end
end

local function blackholeTool()
    local Players = game:GetService("Players");
    local LocalPlayer = Players.LocalPlayer;
    LocalPlayer.CharacterAdded:Connect(function()
    if not LocalPlayer.Backpack:FindFirstChild("Blackhole Tool") then
        local Mouse = LocalPlayer:GetMouse();
        local tool = Instance.new("Tool");
        tool.Name = "Blackhole Tool";
        tool.RequiresHandle = false;
        tool.CanBeDropped = false;
        tool.Parent = LocalPlayer.Backpack;
        tool.Activated:Connect(function()
            toggleBlackhole(not blackholeBool.Value);
        end);
    end end)
    if not LocalPlayer.Backpack:FindFirstChild("Blackhole Tool") then
        local Mouse = LocalPlayer:GetMouse();
        local tool = Instance.new("Tool");
        tool.Name = "Blackhole Tool";
        tool.RequiresHandle = false;
        tool.CanBeDropped = false;
        tool.Parent = LocalPlayer.Backpack;
        tool.Activated:Connect(function()
            toggleBlackhole(not blackholeBool.Value);
        end);
    end
end

local Players = game:GetService("Players");
local ReplicatedStorage = game:GetService("ReplicatedStorage");
local TextChatService = game:GetService("TextChatService");
TextChatService.OnIncomingMessage = function(message)
	local localPlayer = Players.LocalPlayer;
	if message.TextSource and Players:GetPlayerByUserId(message.TextSource.UserId) == localPlayer then
		local msg = string.split(message.Text, " ");
		if string.lower(msg[1]) == "/give" and msg[2] then
			local toolsFolder = ReplicatedStorage:WaitForChild("ShopAssetsFolder"):WaitForChild("ToolsFolder"):WaitForChild("Tools");
			if string.lower(msg[2]) == "all" then
				for _, tool in ipairs(toolsFolder:GetChildren()) do
					toolGet(tool.Name);
				end;
                killTool();
                healTool();
                blackholeTool();
            elseif string.lower(msg[2]) == "killtool" then
                killTool();
            elseif string.lower(msg[2]) == "healtool" then
                healTool();
            elseif string.lower(msg[2]) == "blackholetool" then
                blackholeTool();
			else
				local toolNamePart = msg[2]:lower();
				for _, tool in ipairs(toolsFolder:GetChildren()) do
					if string.find(tool.Name:lower(), toolNamePart, 1, true) then
						toolGet(tool.Name);
						break;
					end;
				end;
			end;
		elseif string.lower(msg[1]) == "/kill" and msg[2] then
			local targetPart = msg[2]:lower();
			if targetPart == "all" then
				for _, p in ipairs(Players:GetPlayers()) do
					kill(p);
				end;
			else
				for _, p in ipairs(Players:GetPlayers()) do
					if string.find(p.Name:lower(), targetPart, 1, true) then
						kill(p);
						break;
					end;
				end;
			end;
		end;
	end;
end;
